/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zkm/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        cprght: cprght {
            label = "ZM_cprght";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        degree: degree {
            label = "ZM_degree";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        quote: quote {
            label = "ZM_quote";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        euro: euro {
            label = "ZM_euro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        numcomma: numcomma {
            label = "ZM_numcomma";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        lguillement: lguillement {
            label = "ZM_lguillement";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        rguillement: rguillement {
            label = "ZM_rguillement";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N8 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };

        lbracket: lbracket {
            label = "ZM_lbracket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        rbracket: rbracket {
            label = "ZM_rbracket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        colon: colon {
            label = "ZM_colon";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        semicolon: semicolon {
            label = "ZM_semicolon";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        question: question {
            label = "ZM_question";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        lsqbracket: lsqbracket {
            label = "ZM_lsqbracket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        rsqbracket: rsqbracket {
            label = "ZM_rsqbracket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        eng_colemak: eng_colemak {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp N0 &to 0>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LSHIFT>;

            label = "ENG_COLEMAK";
        };

        ru_qwerty: ru_qwerty {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_1 &to 1>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LSHIFT>;

            label = "RU_QWERTY";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_grave {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp GRAVE>;
        };

        combo_esc_right {
            timeout-ms = <50>;
            key-positions = <19 31>;
            bindings = <&kp ESC>;
        };

        combo_comma {
            timeout-ms = <50>;
            key-positions = <15 14>;
            bindings = <&numcomma>;
        };

        combo_dot {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&numdot>;
        };

        combo_esc_left {
            timeout-ms = <50>;
            key-positions = <16 28>;
            bindings = <&kp ESC>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp DEL>;
        };

        combo_colon {
            timeout-ms = <50>;
            key-positions = <20 19>;
            bindings = <&colon>;
        };

        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&semicolon>;
        };

        combo_numcomma {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&numcomma>;
        };

        combo_copy {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp LC(C)>;
        };

        combo_cut {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp LC(X)>;
        };

        combo_paste {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LC(V)>;
        };

        to_colemak_game {
            bindings = <&to 2>;
            key-positions = <12 23>;
        };

        to_qwerty_game {
            bindings = <&to 3>;
            key-positions = <24 35>;
        };

        to_colemak {
            bindings = <&to 0>;
            key-positions = <0 11>;
        };
    };
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        colemak {
            // ┌────────────────────────────────────────────┐

            label = "colemak";

            // └────────────────────────────────────────────┘
            /*
┌───────┬───────┬───────┬───────┬───────┬───────┐                   ┌───────┬───────┬───────┬───────┬───────┬───────┐
│ LGUI/]│   Q   │   W   │   E   │   R   │   T   │                   │   Y   │   U   │   I   │   O   │   P   │RGUI/[ │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤                      
│ CTRL/`│   A   │   S   │   D   │   F   │   G   │                   │   H   │   J   │   K   │   L   │   ;   │RCTRL/'│
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤
│ LALT/\│   Z   │   X   │   C   │   V   │   B   │                   │   N   │   M   │   ,   │   .   │   /   │RALT/- │
└───────┴───────┴───────┴───────┼───────┼───────┼───────┐   ┌───────┼───────┼───────┼───────┴───────┴───────┴───────┘
                                │ RAISE │ SPACE │ LOWER │   │ LOWER │  BKSP │ RAISE │
                                └───────┴───────┴───────┘   └───────┴───────┴───────┘   
*/

            bindings = <
&mt DELETE ESCAPE    &kp Q            &kp W                &kp F            &kp P              &kp B        &kp J      &kp L               &kp U             &kp Y                 &kp SEMI          &mt RIGHT_BRACKET LEFT_BRACKET
&mt LC(LS(T)) LG(V)  &hml LEFT_WIN A  &hml LEFT_CONTROL R  &hml LEFT_ALT S  &hml LEFT_SHIFT T  &kp G        &kp M      &hmr RIGHT_SHIFT N  &hmr RIGHT_ALT E  &hmr RIGHT_CONTROL I  &hmr RIGHT_WIN O  &kp SQT
&kp EQUAL            &kp Z            &kp X                &kp C            &kp D              &kp V        &kp K      &kp H               &kp COMMA         &kp DOT               &kp FSLH          &mt PLUS MINUS
                                                           &lt 6 TAB        &lt 4 SPACE        &lt 5 RET    &lt 5 RET  &lt 6 BACKSPACE     &lt 6 DEL
            >;
        };

        qwerty {
            label = "qwerty";
            bindings = <
&mt DELETE ESCAPE    &kp Q            &kp W                &kp E            &kp R              &kp T        &kp Y      &kp U               &kp I             &kp O                 &kp P                     &mt RIGHT_BRACKET LEFT_BRACKET
&mt LC(LS(T)) LG(V)  &hml LEFT_WIN A  &hml LEFT_CONTROL S  &hml LEFT_ALT D  &hml LEFT_SHIFT F  &kp G        &kp H      &hmr RIGHT_SHIFT J  &hmr RIGHT_ALT K  &hmr RIGHT_CONTROL L  &hmr RIGHT_WIN SEMICOLON  &kp SQT
&kp EQUAL            &kp Z            &kp X                &kp C            &kp V              &kp B        &kp N      &kp M               &kp COMMA         &kp DOT               &kp FSLH                  &mt PLUS MINUS
                                                           &lt 6 TAB        &lt 4 SPACE        &lt 5 RET    &lt 5 RET  &lt 6 BACKSPACE     &lt 6 DEL
            >;
        };

        colemak_game {
            label = "colemak_game";
            bindings = <
&mt DELETE ESCAPE    &kp Q  &kp W  &kp F      &kp P        &kp B        &kp J      &kp L            &kp U      &kp Y    &kp SEMI  &mt RIGHT_BRACKET LEFT_BRACKET
&mt LC(LS(T)) LG(V)  &kp A  &kp R  &kp S      &kp T        &kp G        &kp M      &kp N            &kp E      &kp I    &kp O     &kp SQT
&mt TAB EQUAL        &kp Z  &kp X  &kp C      &kp D        &kp V        &kp K      &kp H            &kp COMMA  &kp DOT  &kp FSLH  &mt PLUS MINUS
                                   &lt 6 TAB  &lt 4 SPACE  &lt 5 RET    &lt 5 RET  &lt 6 BACKSPACE  &lt 6 DEL
            >;
        };

        qwerty_game {
            label = "qwerty_game";
            bindings = <
&mt DELETE ESCAPE    &kp Q  &kp W  &kp E      &kp R        &kp T        &kp Y      &kp U            &kp I      &kp O    &kp P     &mt RIGHT_BRACKET LEFT_BRACKET
&mt LC(LS(T)) LG(V)  &kp A  &kp S  &kp D      &kp F        &kp G        &kp H      &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&kp EQUAL            &kp Z  &kp X  &kp C      &kp V        &kp B        &kp N      &kp M            &kp COMMA  &kp DOT  &kp FSLH  &mt PLUS MINUS
                                   &lt 6 TAB  &lt 4 SPACE  &lt 5 RET    &lt 5 RET  &lt 6 BACKSPACE  &lt 6 DEL
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &ru_qwerty  &eng_colemak  &mwh SCROLL_UP      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LC(Y)   &kp LC(Z)     &mwh SCROLL_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans        &trans              &trans  &trans  &trans  &trans  &trans  &trans
                        &trans      &trans        &trans              &trans  &trans  &trans
            >;
        };

        nums {
            // ┌────────────────────────────────────────────┐

            label = "nums";

            // └────────────────────────────────────────────┘
            /*
┌───────┬───────┬───────┬───────┬───────┬───────┐                   ┌───────┬───────┬───────┬───────┬───────┬───────┐
│ CAPS  │  F10  │  F9   │  F8   │  F7   │   ~   │                   │   !   │   @   │   #   │   $   │   %   │ RGUI  │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤                      
│ CTRL  │  F11  │  F3   │  F2   │  F1   │ MENU  │                   │   :   │   ?   │   *   │   (   │   )   │   &   │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤
│ LALT  │  F12  │  F6   │  F5   │  F4   │ LANG  │                   │   "   │   «   │   »   │   {   │   }   │   ^   │
└───────┴───────┴───────┴───────┼───────┼───────┼───────┐   ┌───────┼───────┼───────┼───────┴───────┴───────┴───────┘
                                │  ADJ  │ LSHFT │   ▼   │   │   ▼   │ RSHFT │  ADJ  │
                                └───────┴───────┴───────┘   └───────┴───────┴───────┘   
*/

            bindings = <
&mt DELETE BACKSPACE  &kp FSLH                &kp N7               &kp N8            &kp N9              &kp MINUS    &kp EXCL  &kp AT          &kp HASH       &kp DOLLAR  &kp PERCENT  &kp RGUI
&mt ENTER EQUAL       &hml LEFT_WIN ASTERISK  &hml LCTRL NUMBER_4  &hml LEFT_ALT N5  &hml LEFT_SHIFT N6  &kp PLUS     &colon    &question       &kp BACKSLASH  &kp LPAR    &kp RPAR     &kp AMPS
&numdot               &numcomma               &kp N1               &kp N2            &kp N3              &kp N0       &quote    &lsqbracket     &rsqbracket    &lbracket   &rbracket    &kp CARET
                                                                   &lt 7 TAB         &mt LSHFT SPACE     &trans       &trans    &mt RSHFT BSPC  &lt 7 DEL
            >;
        };

        raise_layer {
            // ┌────────────────────────────────────────────┐

            label = "RAISE";

            // └────────────────────────────────────────────┘
            /*
┌───────┬───────┬───────┬───────┬───────┬───────┐                   ┌───────┬───────┬───────┬───────┬───────┬───────┐
│ BKSP  │   *   │   9   │   8   │   7   │   +   │                   │ NEXT  │ HOME  │ PSCRN │ PGUP  │ VOLU  │ RGUI  │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤                      
│ CTRL  │   /   │   3   │   2   │   1   │   0   │                   │ PLAY  │   ←   │   ↑   │   →   │ VOLD  │ CTRL  │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤
│ ALT/= │   .   │   6   │   5   │   4   │   -   │                   │ PREV  │  END  │   ↓   │ PGDN  │ MUTE  │ RALT  │
└───────┴───────┴───────┴───────┼───────┼───────┼───────┐   ┌───────┼───────┼───────┼───────┴───────┴───────┴───────┘
                                │   ▲   │ LSHFT │  ADJ  │   │  ADJ  │ RSHFT │   ▲   │
                                └───────┴───────┴───────┘   └───────┴───────┴───────┘  
*/

            bindings = <
&kp CAPSLOCK  &kp F1            &kp F2                &kp F3            &kp F4              &kp C_BRIGHTNESS_INC    &kp C_NEXT  &kp HOME          &kp PAGE_DOWN     &kp PG_UP       &kp END            &kp C_VOLUME_UP
&kp K_SLEEP   &hml LEFT_WIN F5  &hml LEFT_CONTROL F6  &hml LEFT_ALT F7  &hml LEFT_SHIFT F8  &kp PRINTSCREEN         &kp C_PLAY  &kp LEFT          &kp DOWN          &kp UP_ARROW    &kp RIGHT          &kp K_MUTE
&kp K_LOCK    &kp F9            &kp F10               &kp F11           &kp F12             &kp C_BRIGHTNESS_DEC    &kp C_PREV  &msc SCROLL_LEFT  &msc SCROLL_DOWN  &msc SCROLL_UP  &msc SCROLL_RIGHT  &kp C_VOLUME_DOWN
                                                      &trans            &mt LSHFT SPACE     &lt 7 ESC               &lt 7 RET   &mt RSHFT BSPC    &trans
            >;
        };

        adjust_layer {
            // ┌────────────────────────────────────────────┐

            label = "ADJUST";

            // └────────────────────────────────────────────┘
            /*
┌───────┬───────┬───────┬───────┬───────┬───────┐                   ┌───────┬───────┬───────┬───────┬───────┬───────┐
│ BLDR  │       │       │       │       │BT NEXT│                   │BT NEXT│   ₽   │   €   │       │       │  BLDR │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤                      
│ BTCLR │  BT0  │  BT1  │  BT2  │  BT3  │  BT4  │                   │  BT4  │  BT3  │  BT2  │  BT1  │  BT0  │ BTCLR │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤
│ CAPS  │ NUMLK │  INS  │ SLCK  │ PAUSE │BT PREV│                   │BT PREV│ PAUSE │ SLCK  │  INS  │ NUMLK │ CAPS  │
└───────┴───────┴───────┴───────┼───────┼───────┼───────┐   ┌───────┼───────┼───────┼───────┴───────┴───────┴───────┘
                                │   ▲   │ RESET │   ▼   │   │   ▼   │ RESET │   ▲   │
                                └───────┴───────┴───────┘   └───────┴───────┴───────┘
*/

            bindings = <
&bootloader  &none         &none         &none         &bt BT_PRV       &bt BT_NXT      &bt BT_NXT    &kp RA(N8)       &euro         &cprght       &degree       &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3     &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&kp CAPS     &kp KP_NUM    &kp INS       &kp SLCK      &kp PAUSE_BREAK  &bt BT_PRV      &bt BT_PRV    &kp PAUSE_BREAK  &kp SLCK      &kp INS       &kp KP_NUM    &kp CAPS
                                         &trans        &sys_reset       &trans          &trans        &sys_reset       &trans
            >;
        };
    };
};
